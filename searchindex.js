Search.setIndex({"docnames": ["index", "matrixconverters/matrixconverters", "matrixconverters/matrixconverters.read_csv", "matrixconverters/matrixconverters.read_ptv", "matrixconverters/matrixconverters.save_ptv", "matrixconverters/matrixconverters.tests", "matrixconverters/matrixconverters.tests.test_read_csv", "matrixconverters/matrixconverters.tests.test_read_visum", "matrixconverters/matrixconverters.tests.test_save_psv", "matrixconverters/matrixconverters.tests.test_xarray2netcdf", "matrixconverters/matrixconverters.xarray2netcdf", "matrixconverters/modules"], "filenames": ["index.rst", "matrixconverters/matrixconverters.rst", "matrixconverters/matrixconverters.read_csv.rst", "matrixconverters/matrixconverters.read_ptv.rst", "matrixconverters/matrixconverters.save_ptv.rst", "matrixconverters/matrixconverters.tests.rst", "matrixconverters/matrixconverters.tests.test_read_csv.rst", "matrixconverters/matrixconverters.tests.test_read_visum.rst", "matrixconverters/matrixconverters.tests.test_save_psv.rst", "matrixconverters/matrixconverters.tests.test_xarray2netcdf.rst", "matrixconverters/matrixconverters.xarray2netcdf.rst", "matrixconverters/modules.rst"], "titles": ["Welcome to the Matrixconverters documentation!", "matrixconverters package", "matrixconverters.read_csv module", "matrixconverters.read_ptv module", "matrixconverters.save_ptv module", "matrixconverters.tests package", "matrixconverters.tests.test_read_csv module", "matrixconverters.tests.test_read_visum module", "matrixconverters.tests.test_save_psv module", "matrixconverters.tests.test_xarray2netcdf module", "matrixconverters.xarray2netcdf module", "matrixconverters"], "terms": {"ha": 0, "been": 0, "develop": 0, "read": [0, 2, 3], "write": [0, 3, 4, 10], "ptv": [0, 3, 4], "matric": 0, "xarrai": [0, 3, 10], "dataset": [0, 2, 3, 4, 10], "tool": 0, "format": [0, 3, 4], "visum": 0, "It": 0, "implement": 0, "can": 0, "follow": 0, "text": [0, 3, 4], "o": [0, 3], "v": [0, 3], "": 0, "binari": [0, 3, 4], "bi": [0, 3], "bk": [0, 3, 4], "bl": 0, "matrix": [0, 2, 3], "from": [0, 2, 3], "import": 0, "readptvmatrix": [0, 1, 3, 11], "saveptvmatrix": [0, 1, 4], "d": [0, 4], "filepath": [0, 2, 4, 10], "save": [0, 4, 10], "xr": 0, "da": 0, "dataarrai": [0, 2, 3, 4], "np": 0, "arang": 0, "9": [0, 10], "reshap": 0, "3": 0, "zone": [0, 2, 3], "100": 0, "200": 0, "300": 0, "name": [0, 2, 3], "A": 0, "town": 0, "b": [0, 3], "villag": 0, "c": 0, "citi": 0, "zone_no": [0, 3], "zone_nam": [0, 3], "save_ptv": [0, 1, 11], "saveptv": [0, 1, 4, 11], "file_nam": [0, 4], "matrix_fn_out": 0, "file_typ": [0, 4], "psv": [0, 4], "programmsystem": 0, "verkehr": 0, "softwar": 0, "kontor": 0, "helmert": 0, "hilk": 0, "type": [0, 2, 3, 4], "cc": [0, 4], "cn": 0, "savepsvmatrix": [0, 1, 4], "ftype": [0, 4], "export": [0, 4], "compress": [0, 10], "netcdf": [0, 10], "xarray2netcdf": [0, 1, 11], "file_path": 0, "ds_save": 0, "open_dataset": 0, "you": 0, "us": [0, 2, 10], "pip": 0, "packag": [0, 11], "requir": 0, "like": 0, "numpi": 0, "anoth": 0, "wai": 0, "handl": [0, 3], "depend": 0, "i": [0, 3, 10], "conda": 0, "There": 0, "python": 0, "8": [0, 3, 4], "12": 0, "window": 0, "linux": 0, "ar": [0, 10], "gener": [0, 10], "channel": 0, "maxbo": 0, "anaconda": 0, "cloud": 0, "creat": [0, 3], "n": [0, 3], "myenv": 0, "activ": 0, "config": 0, "add": 0, "forg": 0, "code": 0, "subpackag": [0, 11], "submodul": [0, 11], "modul": [0, 11], "content": [0, 11], "index": 0, "search": 0, "page": 0, "test": [1, 11], "test_read_csv": [1, 5], "test_read_visum": [1, 5], "test_save_psv": [1, 5], "test_xarray2netcdf": [1, 5], "read_csv": [1, 11], "readoformat": [1, 2, 11], "__init__": [1, 2, 3, 4], "read_file_to_da": [1, 2], "read_matrix_csv": [1, 2], "read_zones_csv": [1, 2], "read_ptv": [1, 11], "_openfil": [1, 3], "create_matrix": [1, 3], "create_zone_nam": [1, 3], "create_zon": [1, 3], "float_nan": [1, 3], "readptvmatrixb": [1, 3], "readptvmatrixo": [1, 3], "readptvmatrixv": [1, 3], "read_f4": [1, 3], "read_f8": [1, 3], "read_head": [1, 3], "read_i2": [1, 3], "read_i4": [1, 3], "read_nam": [1, 3], "read_names_o_format": [1, 3], "read_u1": [1, 3], "read_utf16": [1, 3], "read_valu": [1, 3], "read_values_in_o_format_to_list": [1, 3], "read_values_to_arrai": [1, 3], "write_f4": [1, 4], "write_f8": [1, 4], "write_i2": [1, 4], "write_i4": [1, 4], "write_u1": [1, 4], "write_utf16": [1, 4], "write_lin": [1, 4, 11], "xr2netcdf": [1, 10, 11], "class": [2, 3, 4], "zonefil": 2, "matrixfil": 2, "cols_zon": 2, "none": [2, 3], "cols_matrix": 2, "base": [2, 3, 4], "file": [2, 3, 4, 10], "paramet": [2, 3, 4, 10], "str": [2, 3, 4, 10], "iter": [2, 3], "valu": [2, 3, 4], "column": [2, 3, 4], "columnsto": 2, "column_with_zone_no": 2, "column_with_zone_nam": 2, "data_col": 2, "filenam": [2, 3], "target_col": 2, "pkei": 2, "data": [2, 3, 10], "full": 2, "filepyth": 2, "target": 2, "colum": 2, "primari": 2, "kei": 2, "return": [2, 3], "result": 2, "csv": 2, "store": [2, 10], "self": 2, "input": 2, "coordin": [2, 3], "determin": 3, "header": 3, "e": 3, "an": [3, 4], "path": [3, 10], "disk": 3, "mode": [3, 10], "r": 3, "encod": [3, 4], "latin1": 3, "open": [3, 4], "accord": 3, "method": 3, "append": [3, 10], "default": [3, 10], "latin": 3, "1": [3, 4, 10], "io": 3, "handler": [3, 4], "meta": 3, "public": 3, "n_zone": 3, "n_col": 3, "dtype": 3, "f8": 3, "int": [3, 4, 10], "number": [3, 4], "take": 3, "specifi": 3, "datatyp": 3, "matrx": 3, "dim": 3, "dimens": 3, "cordin": 3, "static": [3, 4], "x": 3, "convert": 3, "float": [3, 4], "0": [3, 4], "f": [3, 4], "32": 3, "bit": 3, "current": 3, "posit": 3, "binaryio": [3, 4], "64": 3, "doubl": [3, 4], "textio": 3, "object": [3, 4], "dequ": 3, "row": 3, "16": 3, "shortint": 3, "arr": 3, "given": [3, 4, 10], "arrai": [3, 4], "line": [3, 4], "block": 3, "char": 3, "utf16": [3, 4], "string": 3, "integ": [3, 4], "nt": 3, "n_valu": 3, "list": 3, "tupl": 3, "sep": 3, "where": [3, 10], "written": [3, 4], "separ": 3, "charact": [3, 4], "should": 4, "max_width": 4, "1000": 4, "maximum": 4, "version": 4, "11": 4, "im": 4, "output": 4, "val": 4, "4": 4, "byte": 4, "2": [4, 10], "length": 4, "adjust": 4, "pad": 4, "left": 4, "side": 4, "w": 10, "engin": 10, "h5netcdf": 10, "true": 10, "complevel": 10, "level": 10, "shold": 10, "bool": 10, "fals": 10, "variabl": 10, "between": 10, "faster": 10, "more": 10, "effici": 10, "much": 10, "slower": 10, "good": 10, "compromis": 10}, "objects": {"": [[1, 0, 0, "-", "matrixconverters"]], "matrixconverters": [[2, 0, 0, "-", "read_csv"], [3, 0, 0, "-", "read_ptv"], [4, 0, 0, "-", "save_ptv"], [5, 0, 0, "-", "tests"], [10, 0, 0, "-", "xarray2netcdf"]], "matrixconverters.read_csv": [[2, 1, 1, "", "ReadOFormat"]], "matrixconverters.read_csv.ReadOFormat": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "read_file_to_da"], [2, 2, 1, "", "read_matrix_csv"], [2, 2, 1, "", "read_zones_csv"]], "matrixconverters.read_ptv": [[3, 1, 1, "", "ReadPTVMatrix"]], "matrixconverters.read_ptv.ReadPTVMatrix": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "_openfile"], [3, 2, 1, "", "create_matrix"], [3, 2, 1, "", "create_zone_names"], [3, 2, 1, "", "create_zones"], [3, 2, 1, "", "float_nan"], [3, 2, 1, "", "readPTVMatrixB"], [3, 2, 1, "", "readPTVMatrixE"], [3, 2, 1, "", "readPTVMatrixO"], [3, 2, 1, "", "readPTVMatrixV"], [3, 2, 1, "", "read_f4"], [3, 2, 1, "", "read_f8"], [3, 2, 1, "", "read_header"], [3, 2, 1, "", "read_i2"], [3, 2, 1, "", "read_i4"], [3, 2, 1, "", "read_names"], [3, 2, 1, "", "read_names_o_format"], [3, 2, 1, "", "read_u1"], [3, 2, 1, "", "read_utf16"], [3, 2, 1, "", "read_value"], [3, 2, 1, "", "read_values"], [3, 2, 1, "", "read_values_in_o_format_to_list"], [3, 2, 1, "", "read_values_to_array"]], "matrixconverters.save_ptv": [[4, 1, 1, "", "SavePTV"], [4, 3, 1, "", "write_line"]], "matrixconverters.save_ptv.SavePTV": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "savePSVMatrix"], [4, 2, 1, "", "savePTVMatrix"], [4, 2, 1, "", "write_f4"], [4, 2, 1, "", "write_f8"], [4, 2, 1, "", "write_i2"], [4, 2, 1, "", "write_i4"], [4, 2, 1, "", "write_u1"], [4, 2, 1, "", "write_utf16"]], "matrixconverters.xarray2netcdf": [[10, 3, 1, "", "xr2netcdf"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "matrixconvert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "document": 0, "readm": 0, "file": 0, "instal": 0, "thi": 0, "contain": 0, "indic": 0, "tabl": 0, "packag": [1, 5], "subpackag": 1, "submodul": [1, 5], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "content": [1, 5], "read_csv": 2, "read_ptv": 3, "save_ptv": 4, "test": [5, 6, 7, 8, 9], "test_read_csv": 6, "test_read_visum": 7, "test_save_psv": 8, "test_xarray2netcdf": 9, "xarray2netcdf": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to the Matrixconverters documentation!": [[0, "welcome-to-the-matrixconverters-documentation"]], "Readme File": [[0, "readme-file"]], "matrixconverters:": [[0, "matrixconverters"]], "Installation": [[0, "installation"]], "This documentation contains": [[0, "this-documentation-contains"]], "Indices and tables": [[0, "indices-and-tables"]], "matrixconverters package": [[1, "matrixconverters-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [5, "submodules"]], "Module contents": [[1, "module-matrixconverters"], [5, "module-matrixconverters.tests"]], "matrixconverters.read_csv module": [[2, "module-matrixconverters.read_csv"]], "matrixconverters.read_ptv module": [[3, "module-matrixconverters.read_ptv"]], "matrixconverters.save_ptv module": [[4, "module-matrixconverters.save_ptv"]], "matrixconverters.tests package": [[5, "matrixconverters-tests-package"]], "matrixconverters.tests.test_read_csv module": [[6, "matrixconverters-tests-test-read-csv-module"]], "matrixconverters.tests.test_read_visum module": [[7, "matrixconverters-tests-test-read-visum-module"]], "matrixconverters.tests.test_save_psv module": [[8, "matrixconverters-tests-test-save-psv-module"]], "matrixconverters.tests.test_xarray2netcdf module": [[9, "matrixconverters-tests-test-xarray2netcdf-module"]], "matrixconverters.xarray2netcdf module": [[10, "module-matrixconverters.xarray2netcdf"]], "matrixconverters": [[11, "matrixconverters"]]}, "indexentries": {"matrixconverters": [[1, "module-matrixconverters"]], "module": [[1, "module-matrixconverters"], [2, "module-matrixconverters.read_csv"], [3, "module-matrixconverters.read_ptv"], [4, "module-matrixconverters.save_ptv"], [5, "module-matrixconverters.tests"], [10, "module-matrixconverters.xarray2netcdf"]], "readoformat (class in matrixconverters.read_csv)": [[2, "matrixconverters.read_csv.ReadOFormat"]], "__init__() (matrixconverters.read_csv.readoformat method)": [[2, "matrixconverters.read_csv.ReadOFormat.__init__"]], "matrixconverters.read_csv": [[2, "module-matrixconverters.read_csv"]], "read_file_to_da() (matrixconverters.read_csv.readoformat method)": [[2, "matrixconverters.read_csv.ReadOFormat.read_file_to_da"]], "read_matrix_csv() (matrixconverters.read_csv.readoformat method)": [[2, "matrixconverters.read_csv.ReadOFormat.read_matrix_csv"]], "read_zones_csv() (matrixconverters.read_csv.readoformat method)": [[2, "matrixconverters.read_csv.ReadOFormat.read_zones_csv"]], "readptvmatrix (class in matrixconverters.read_ptv)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix"]], "__init__() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.__init__"]], "_openfile() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix._openfile"]], "create_matrix() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.create_matrix"]], "create_zone_names() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.create_zone_names"]], "create_zones() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.create_zones"]], "float_nan() (matrixconverters.read_ptv.readptvmatrix static method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.float_nan"]], "matrixconverters.read_ptv": [[3, "module-matrixconverters.read_ptv"]], "readptvmatrixb() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.readPTVMatrixB"]], "readptvmatrixe() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.readPTVMatrixE"]], "readptvmatrixo() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.readPTVMatrixO"]], "readptvmatrixv() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.readPTVMatrixV"]], "read_f4() (matrixconverters.read_ptv.readptvmatrix static method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_f4"]], "read_f8() (matrixconverters.read_ptv.readptvmatrix static method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_f8"]], "read_header() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_header"]], "read_i2() (matrixconverters.read_ptv.readptvmatrix static method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_i2"]], "read_i4() (matrixconverters.read_ptv.readptvmatrix static method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_i4"]], "read_names() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_names"]], "read_names_o_format() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_names_o_format"]], "read_u1() (matrixconverters.read_ptv.readptvmatrix static method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_u1"]], "read_utf16() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_utf16"]], "read_value() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_value"]], "read_values() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_values"]], "read_values_in_o_format_to_list() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_values_in_o_format_to_list"]], "read_values_to_array() (matrixconverters.read_ptv.readptvmatrix method)": [[3, "matrixconverters.read_ptv.ReadPTVMatrix.read_values_to_array"]], "saveptv (class in matrixconverters.save_ptv)": [[4, "matrixconverters.save_ptv.SavePTV"]], "__init__() (matrixconverters.save_ptv.saveptv method)": [[4, "matrixconverters.save_ptv.SavePTV.__init__"]], "matrixconverters.save_ptv": [[4, "module-matrixconverters.save_ptv"]], "savepsvmatrix() (matrixconverters.save_ptv.saveptv method)": [[4, "matrixconverters.save_ptv.SavePTV.savePSVMatrix"]], "saveptvmatrix() (matrixconverters.save_ptv.saveptv method)": [[4, "matrixconverters.save_ptv.SavePTV.savePTVMatrix"]], "write_f4() (matrixconverters.save_ptv.saveptv static method)": [[4, "matrixconverters.save_ptv.SavePTV.write_f4"]], "write_f8() (matrixconverters.save_ptv.saveptv static method)": [[4, "matrixconverters.save_ptv.SavePTV.write_f8"]], "write_i2() (matrixconverters.save_ptv.saveptv static method)": [[4, "matrixconverters.save_ptv.SavePTV.write_i2"]], "write_i4() (matrixconverters.save_ptv.saveptv static method)": [[4, "matrixconverters.save_ptv.SavePTV.write_i4"]], "write_line() (in module matrixconverters.save_ptv)": [[4, "matrixconverters.save_ptv.write_line"]], "write_u1() (matrixconverters.save_ptv.saveptv static method)": [[4, "matrixconverters.save_ptv.SavePTV.write_u1"]], "write_utf16() (matrixconverters.save_ptv.saveptv method)": [[4, "matrixconverters.save_ptv.SavePTV.write_utf16"]], "matrixconverters.tests": [[5, "module-matrixconverters.tests"]], "matrixconverters.xarray2netcdf": [[10, "module-matrixconverters.xarray2netcdf"]], "xr2netcdf() (in module matrixconverters.xarray2netcdf)": [[10, "matrixconverters.xarray2netcdf.xr2netcdf"]]}})